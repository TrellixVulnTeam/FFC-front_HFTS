[{"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\index.js":"1","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\App.js":"2","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\AppRoutes.js":"4","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\AuthRoutes.js":"5","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Treatments.js":"6","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Patients.js":"7","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\TreatmentsSpec.js":"8","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\Login.js":"9","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Dashboard.js":"10","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\History.js":"11","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\Register.js":"12","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useAuth.js":"13","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Tests\\TestForm.js":"14","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientForm.js":"15","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Results\\Results.js":"16","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\Header.js":"17","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\DoctorDashboard\\DoctorDashboard.js":"18","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\PatientDashboard\\PatientDashboard.js":"19","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\modal\\Modal.js":"20","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\PatientResetPassword\\PatientResetPasswordModal.js":"21","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsAndTreatmentsHistory.js":"22","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\LoginForm.js":"23","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\Legend.js":"24","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientsList.js":"25","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsAndTreatments.js":"26","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientCard.js":"27","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\auth-api.js":"28","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\select\\Select.js":"29","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\input\\Input.js":"30","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\patients-api.js":"31","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\tests-api.js":"32","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\text-area\\TextArea.js":"33","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\date-picker\\DatePicker.js":"34","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientsListHP.js":"35","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\NavigationItems.js":"36","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\Notifications.js":"37","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTests.js":"38","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\HeaderRightSide.js":"39","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\NextTestCard.js":"40","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\PatientResetPassword\\PatientResetPasswordForm.js":"41","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\Dashboard-components\\Notifications.js":"42","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\LoginSubheader.js":"43","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\FormError.js":"44","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useRequest.js":"45","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsHistory.js":"46","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\submit-btn\\SubmitBtn.js":"47","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\app-instance.js":"48","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\notifications.js":"49","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useGlobaModal.js":"50","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useModal.js":"51","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\CompleteTreatmentForm.js":"52","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\GuideDisplay.js":"53","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\treatment-api.js":"54","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\indicators\\TableIndicator.js":"55","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\UserActions\\UserActions.js":"56","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Tickets\\CreateTicketForm.js":"57","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\UserActions\\UserActionsMenu.js":"58"},{"size":912,"mtime":1654352553469,"results":"59","hashOfConfig":"60"},{"size":1308,"mtime":1654352553384,"results":"61","hashOfConfig":"60"},{"size":375,"mtime":1654352554091,"results":"62","hashOfConfig":"60"},{"size":4119,"mtime":1654352554088,"results":"63","hashOfConfig":"60"},{"size":1142,"mtime":1654352554090,"results":"64","hashOfConfig":"60"},{"size":1553,"mtime":1654352554089,"results":"65","hashOfConfig":"60"},{"size":1868,"mtime":1654352554089,"results":"66","hashOfConfig":"60"},{"size":2027,"mtime":1654352554089,"results":"67","hashOfConfig":"60"},{"size":494,"mtime":1654352554090,"results":"68","hashOfConfig":"60"},{"size":543,"mtime":1654352554088,"results":"69","hashOfConfig":"60"},{"size":1399,"mtime":1654352554088,"results":"70","hashOfConfig":"60"},{"size":3516,"mtime":1654352554090,"results":"71","hashOfConfig":"60"},{"size":494,"mtime":1654352553468,"results":"72","hashOfConfig":"60"},{"size":6666,"mtime":1654352553462,"results":"73","hashOfConfig":"60"},{"size":3901,"mtime":1654352553453,"results":"74","hashOfConfig":"60"},{"size":6459,"mtime":1654352553460,"results":"75","hashOfConfig":"60"},{"size":713,"mtime":1654352553446,"results":"76","hashOfConfig":"60"},{"size":948,"mtime":1654352553448,"results":"77","hashOfConfig":"60"},{"size":1340,"mtime":1654352553450,"results":"78","hashOfConfig":"60"},{"size":836,"mtime":1654352553467,"results":"79","hashOfConfig":"60"},{"size":570,"mtime":1654352553464,"results":"80","hashOfConfig":"60"},{"size":336,"mtime":1654352553454,"results":"81","hashOfConfig":"60"},{"size":1821,"mtime":1654352553463,"results":"82","hashOfConfig":"60"},{"size":1490,"mtime":1654352553451,"results":"83","hashOfConfig":"60"},{"size":1411,"mtime":1654352553454,"results":"84","hashOfConfig":"60"},{"size":315,"mtime":1654352553453,"results":"85","hashOfConfig":"60"},{"size":2229,"mtime":1654352553452,"results":"86","hashOfConfig":"60"},{"size":507,"mtime":1654352553444,"results":"87","hashOfConfig":"60"},{"size":910,"mtime":1654352553465,"results":"88","hashOfConfig":"60"},{"size":875,"mtime":1654352553465,"results":"89","hashOfConfig":"60"},{"size":362,"mtime":1654352553444,"results":"90","hashOfConfig":"60"},{"size":922,"mtime":1654352553445,"results":"91","hashOfConfig":"60"},{"size":832,"mtime":1654352553466,"results":"92","hashOfConfig":"60"},{"size":2224,"mtime":1654352553465,"results":"93","hashOfConfig":"60"},{"size":1521,"mtime":1654352553455,"results":"94","hashOfConfig":"60"},{"size":2192,"mtime":1654352553446,"results":"95","hashOfConfig":"60"},{"size":814,"mtime":1654352630884,"results":"96","hashOfConfig":"60"},{"size":9164,"mtime":1654352553453,"results":"97","hashOfConfig":"60"},{"size":1359,"mtime":1654352553446,"results":"98","hashOfConfig":"60"},{"size":4791,"mtime":1654352553452,"results":"99","hashOfConfig":"60"},{"size":1527,"mtime":1654352553463,"results":"100","hashOfConfig":"60"},{"size":3720,"mtime":1654352553448,"results":"101","hashOfConfig":"60"},{"size":1154,"mtime":1654352553463,"results":"102","hashOfConfig":"60"},{"size":477,"mtime":1654352553464,"results":"103","hashOfConfig":"60"},{"size":778,"mtime":1654352553469,"results":"104","hashOfConfig":"60"},{"size":6865,"mtime":1654352553454,"results":"105","hashOfConfig":"60"},{"size":694,"mtime":1654352553466,"results":"106","hashOfConfig":"60"},{"size":379,"mtime":1654352553444,"results":"107","hashOfConfig":"60"},{"size":588,"mtime":1654352553444,"results":"108","hashOfConfig":"60"},{"size":468,"mtime":1654352553468,"results":"109","hashOfConfig":"60"},{"size":373,"mtime":1654352553468,"results":"110","hashOfConfig":"60"},{"size":1546,"mtime":1654352553450,"results":"111","hashOfConfig":"60"},{"size":1569,"mtime":1654352553451,"results":"112","hashOfConfig":"60"},{"size":610,"mtime":1654352553445,"results":"113","hashOfConfig":"60"},{"size":504,"mtime":1654352553467,"results":"114","hashOfConfig":"60"},{"size":561,"mtime":1654352553447,"results":"115","hashOfConfig":"60"},{"size":2323,"mtime":1654352553462,"results":"116","hashOfConfig":"60"},{"size":1662,"mtime":1654352553447,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qq9h8a",{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\index.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\App.js",["319"],[],"import AuthRoutes from \"./pages/auth/AuthRoutes\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport AppRoutes from \"./pages/app/AppRoutes\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext({\r\n  isAuthenticated: false,\r\n  setIsAuthenticated: () => false,\r\n  isUserDoctor: false,\r\n  setIsUserDoctor: () => {},\r\n});\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isUserDoctor, setIsUserDoctor] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const { type } = JSON.parse(localStorage.getItem(\"user\"));\r\n      setIsUserDoctor(type === \"doctor\");\r\n      return setIsAuthenticated(true);\r\n    }\r\n    navigate(\"/auth/login\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AuthContext.Provider\r\n        value={{\r\n          isAuthenticated,\r\n          setIsAuthenticated,\r\n          setIsUserDoctor,\r\n          isUserDoctor,\r\n        }}\r\n      >\r\n        <div className=\"d-flex flex-column flex-root\">\r\n          {!isAuthenticated && <AuthRoutes />}\r\n          {isAuthenticated && <AppRoutes />}\r\n        </div>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\AppRoutes.js",["320","321"],[],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Header from \"../../components/app/AppLayout/Header/Header\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Patients from \"./Patients\";\r\nimport Treatments from \"./Treatments\";\r\nimport treatmentsspecs from \"./TreatmentsSpec\";\r\nimport History from \"./History\";\r\nimport Modal from \"../../components/core/modal/Modal\";\r\nimport PatientForm from \"../../components/app/Patients/PatientForm\";\r\nimport TestForm from \"../../components/app/Tests/TestForm\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport PatientDashboard from \"../../components/app/Dashboard/PatientDashboard/PatientDashboard\";\r\nimport DoctorDashboard from \"../../components/app/Dashboard/DoctorDashboard/DoctorDashboard\";\r\nimport Results from \"../../components/app/Results/Results\";\r\nimport PatientResetPasswordModal from \"../../components/auth/PatientResetPassword/PatientResetPasswordModal\";\r\nimport TreatmentsSpec from \"./TreatmentsSpec\";\r\n\r\nconst bodyClass = \"header-fixed header-tablet-and-mobile-fixed toolbar-fixed\";\r\n\r\nexport const ModalContext = createContext({\r\n  isPatientModalOpen: false,\r\n  setIsPatientModalOpen: () => {},\r\n  isTestModalOpen: false,\r\n  setIsTestModalOpen: () => {},\r\n});\r\n\r\nconst AppRoutes = () => {\r\n  const { isUserDoctor } = useAuth();\r\n  const { isPasswordSet } = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [isPatientModalOpen, setIsPatientModalOpen] = useState(false);\r\n  const [isTestModalOpen, setIsTestModalOpen] = useState(false);\r\n  const [testToEdit, setTestToEdit] = useState(null);\r\n\r\n  const onEditTest = (test) => {\r\n    setIsTestModalOpen(true);\r\n    setTestToEdit(test);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const bodyClasses = bodyClass.split(\" \");\r\n    document.body.classList.add(...bodyClasses);\r\n    return () => {\r\n      document.body.classList.remove(...bodyClasses);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isTestModalOpen) {\r\n      setTestToEdit(null);\r\n    }\r\n  }, [isTestModalOpen]);\r\n  return (\r\n    <div className=\"wrapper d-flex flex-column flex-row-fluid\">\r\n      <Header\r\n        setIsPatientOpen={setIsPatientModalOpen}\r\n        setIsTestOpen={setIsTestModalOpen}\r\n      />\r\n      <div className=\"content d-flex flex-column flex-column-fluid\">\r\n        <div>\r\n          <ModalContext.Provider\r\n            value={{\r\n              isTestModalOpen,\r\n              isPatientModalOpen,\r\n              setIsPatientModalOpen,\r\n              setIsTestModalOpen,\r\n              onEditTest,\r\n            }}\r\n          >\r\n            <Routes>\r\n              <Route\r\n                path=\"/app/dashboard\"\r\n                element={\r\n                  isUserDoctor ? <DoctorDashboard /> : <PatientDashboard />\r\n                }\r\n              />\r\n              {isUserDoctor && (\r\n                <>\r\n                  <Route path=\"/app/patients\" element={<Patients />} />\r\n                  <Route path=\"/app/treatments\" element={<Treatments />} />\r\n                  <Route path=\"/app/treatmentsspecs\" element={<TreatmentsSpec />} />\r\n                  <Route path=\"/app/history\" element={<History />} />\r\n                  <Route path=\"/app/results\" element={<Results />} />\r\n                </>\r\n              )}\r\n            </Routes>\r\n          </ModalContext.Provider>\r\n        </div>\r\n      </div>\r\n      {isUserDoctor && (\r\n        <>\r\n          <Modal\r\n            isOpen={isPatientModalOpen}\r\n            onClose={() => setIsPatientModalOpen(false)}\r\n            title=\"Create Patient\"\r\n          >\r\n            <PatientForm setIsPatientModalOpen={setIsPatientModalOpen} />\r\n          </Modal>\r\n          <Modal\r\n            isOpen={isTestModalOpen}\r\n            onClose={() => setIsTestModalOpen(false)}\r\n            title=\"Create Test\"\r\n          >\r\n            <TestForm\r\n              setIsTestModalOpen={setIsTestModalOpen}\r\n              testToEdit={testToEdit}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n      {!isUserDoctor && isPasswordSet && <PatientResetPasswordModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\AuthRoutes.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Treatments.js",["322","323","324"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PatientCard from \"../../components/app/Patients/PatientCard\";\r\nimport PatientsList from \"../../components/app/Patients/PatientsList\";\r\nimport Legend from \"../../components/app/Patients/Legend\";\r\nimport PatientTestsAndTreatments from \"../../components/app/Patients/PatientTestsAndTreatments\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Treatments =() => {\r\n  const location = useLocation();\r\n  const [selectedPatient] = useState(location.state.p);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post d-flex flex-column-fluid\" >\r\n        <div className=\"d-flex zflex-column flex-row-fluid align-items-center\" >\r\n          <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n            //display: 'flex',\r\n            //alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n            {<div className=\"col-md-12 col-lg-6\" style={{\r\n              width: '65%'\r\n            }}>\r\n              <PatientTestsAndTreatments selectedPatient={selectedPatient} />\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span> -</span>\r\n      <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n            //display: 'flex',\r\n            //alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n            <div className=\"col-md-3 col-lg-3\" style={{\r\n              width: '60%'\r\n            }} >\r\n              <Legend\r\n              />\r\n            </div>\r\n            </div>\r\n      </>\r\n\r\n  );\r\n};\r\n\r\nexport default Treatments;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Patients.js",["325","326","327","328"],[],"import React, { useState } from \"react\";\r\nimport PatientCard from \"../../components/app/Patients/PatientCard\";\r\nimport PatientsList from \"../../components/app/Patients/PatientsList\";\r\nimport PatientTestsAndTreatments from \"../../components/app/Patients/PatientTestsAndTreatments\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst Patients = (setIsPatientOpen) => {\r\n  const { logout, isUserDoctor } = useAuth();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  return (\r\n    <div className=\"post d-flex flex-column-fluid\" >\r\n      <div className=\"d-flex flex-column flex-row-fluid align-items-center\" >\r\n        <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n          display: 'flex',\r\n          //alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n          <div className=\"col-md-3 col-lg-3\" style={{\r\n            width: '30%'\r\n          }} >\r\n            <PatientsList\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </div>\r\n          {<div className=\"col-md-6 col-lg-3\" style={{\r\n            width: '50%'\r\n          }} >\r\n            <PatientCard selectedPatient={selectedPatient} />\r\n          </div>}\r\n          {/* <div className=\"col-md-12 col-lg-6\">\r\n            <PatientTestsAndTreatments selectedPatient={selectedPatient} />\r\n          </div> */}\r\n          {/* <>\r\n            {isUserDoctor && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary btn-sm\"\r\n                  onClick={() => setIsPatientOpen(true)}\r\n                >\r\n                  Create Patient\r\n                </button>\r\n              </>\r\n            )}\r\n          </> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\TreatmentsSpec.js",["329","330","331"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PatientCard from \"../../components/app/Patients/PatientCard\";\r\nimport PatientsList from \"../../components/app/Patients/PatientsList\";\r\nimport Legend from \"../../components/app/Patients/Legend\";\r\nimport PatientTestsAndTreatments from \"../../components/app/Patients/PatientTestsAndTreatments\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TreatmentsSpec =() => {\r\n  const location = useLocation();\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post d-flex flex-column-fluid\" >\r\n        <div className=\"d-flex zflex-column flex-row-fluid align-items-center\" >\r\n          <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n            //display: 'flex',\r\n            //alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n            <div className=\"col-md-3 col-lg-3\" style={{\r\n              width: '30%'\r\n            }} >\r\n              <PatientsList\r\n                selectedPatient={selectedPatient}\r\n                setSelectedPatient={setSelectedPatient}\r\n              />\r\n            </div>\r\n            {/* { <div className=\"col-md-6 col-lg-3\" style={{\r\n            width: '50%'}} >\r\n            <PatientCard selectedPatient={selectedPatient} />\r\n          </div> } */}\r\n            {<div className=\"col-md-12 col-lg-6\" style={{\r\n              width: '65%'\r\n            }}>\r\n              <PatientTestsAndTreatments selectedPatient={selectedPatient} />\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span> -</span>\r\n      <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n            //display: 'flex',\r\n            //alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n            <div className=\"col-md-3 col-lg-3\" style={{\r\n              width: '60%'\r\n            }} >\r\n              <Legend\r\n              />\r\n            </div>\r\n            </div>\r\n      </>\r\n\r\n  );\r\n};\r\n\r\nexport default TreatmentsSpec;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\Login.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\Dashboard.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\app\\History.js",["332"],[],"import React, { useState } from \"react\";\r\nimport PatientCard from \"../../components/app/Patients/PatientCard\";\r\nimport PatientsList from \"../../components/app/Patients/PatientsList\";\r\nimport PatientTestsAndTreatmentsHistory from \"../../components/app/Patients/PatientTestsAndTreatmentsHistory\";\r\n\r\nconst Treatments = () => {\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  return (\r\n    <div className=\"post d-flex flex-column-fluid\" >\r\n      <div className=\"d-flex zflex-column flex-row-fluid align-items-center\" >\r\n        <div className=\"row g-6 g-xl-9 w-100\" style={{\r\n        display: 'flex',\r\n        //alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}>\r\n          <div className=\"col-md-3 col-lg-3\" style={{\r\n            width: '30%'}} >\r\n            <PatientsList\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </div>\r\n          {/* { <div className=\"col-md-6 col-lg-3\" style={{\r\n            width: '50%'}} >\r\n            <PatientCard selectedPatient={selectedPatient} />\r\n          </div> } */}\r\n          {<div className=\"col-md-12 col-lg-6\" style={{\r\n            width: '65%'}}>\r\n            <PatientTestsAndTreatmentsHistory selectedPatient={selectedPatient} />\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Treatments;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\pages\\auth\\Register.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useAuth.js",["333"],[],"import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useAuth = () => {\r\n  const navigate = useNavigate();\r\n  const authContext = useContext(AuthContext);\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"token\");\r\n    authContext.setIsAuthenticated(false);\r\n    navigate(\"/auth/login\");\r\n  };\r\n  return { ...authContext, logout };\r\n};\r\n\r\nexport default useAuth;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Tests\\TestForm.js",["334"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { FormProvider, useFieldArray, useForm } from \"react-hook-form\";\r\nimport Input from \"../../core/form/input/Input\";\r\nimport Select from \"../../core/form/select/Select\";\r\nimport classNames from \"classnames\";\r\nimport { getPatients } from \"../../../api/patients-api\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\nimport TextArea from \"../../core/form/text-area/TextArea\";\r\nimport DatePicker from \"../../core/form/date-picker/DatePicker\";\r\nimport { createTest, updateTest } from \"../../../api/tests-api\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport { socket } from \"../AppLayout/Header/components/Notifications\";\r\n\r\nconst successSwal = withReactContent(Swal);\r\n\r\nconst TestForm = ({ setIsTestModalOpen, testToEdit }) => {\r\n  const queryClient = useQueryClient();\r\n  const { data } = useQuery(\"patients\", getPatients);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { handleSubmit, watch, control, reset, ...methods } = useForm({\r\n    defaultValues: {\r\n      patient: testToEdit?.patient || \"\",\r\n      testName: testToEdit?.testName || \"\",\r\n      date: parseInt(testToEdit?.date) || \"\",\r\n      foodGuide: testToEdit?.foodGuide || [\r\n        {\r\n          food: \"\",\r\n          amountType: \"\",\r\n          amount: \"\",\r\n          timeBeforeTest: 0,\r\n          timeType: 0,\r\n          description: \"\",\r\n        },\r\n      ],\r\n    },\r\n  });\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: \"foodGuide\",\r\n    control,\r\n  });\r\n  const selectedPatientID = watch(\"patient\");\r\n  const selectedPatient = selectedPatientID\r\n    ? data?.filter((p) => p._id === selectedPatientID)[0]\r\n    : {};\r\n  const onSubmit = async (testForm) => {\r\n    const socketPath = testToEdit ? \"test:update\" : \"test:create\";\r\n    const patient = testToEdit ? testToEdit.patient : testForm.patient;\r\n    setIsLoading(true);\r\n    try {\r\n      const endpoint = testToEdit\r\n        ? () => updateTest(testToEdit._id, testForm)\r\n        : createTest;\r\n      await endpoint(testForm);\r\n      await socket.emit(socketPath, patient);\r\n      setIsTestModalOpen(false);\r\n      queryClient.refetchQueries(\r\n        [\"patientTests\", testForm?.patient || testToEdit._id],\r\n        testForm?.patient || testToEdit._id\r\n      );\r\n      await successSwal.fire({\r\n        timer: 2000,\r\n        timerProgressBar: true,\r\n        toast: true,\r\n        title: \"Success!\",\r\n        icon: \"success\",\r\n        position: \"top-right\",\r\n        showConfirmButton: false,\r\n      });\r\n    } catch (error) {\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const patientOptions =\r\n    data?.map((p) => ({\r\n      value: p._id,\r\n      label: p.fullName,\r\n    })) || [];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FormProvider reset={reset} control={control} watch={watch} {...methods}>\r\n        <h3 className=\"text text-danger d-flex align-items-center my-5\">\r\n          <i className=\"bi bi-exclamation-diamond fs-1 mx-5\" />\r\n          <span>This Patient has allergies - {selectedPatient?.allergies}</span>\r\n        </h3>\r\n        <div>\r\n          {!testToEdit && (\r\n            <Select\r\n              options={patientOptions}\r\n              name=\"patient\"\r\n              label=\"Select Patient\"\r\n              rules={{ required: \"Patient is required\" }}\r\n            />\r\n          )}\r\n          <Input\r\n            name=\"testName\"\r\n            label=\"Test Name\"\r\n            type=\"text\"\r\n            rules={{ required: \"Test Name is required\" }}\r\n          />\r\n          <div>\r\n            <label className=\"form-label mb-3\">Test Date</label>\r\n            <DatePicker name=\"date\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {fields.map((f, i) => (\r\n            <div key={f.id} className=\"col-6\">\r\n              <div className=\"p-5 border-bottom border-info my-5\">\r\n                <h3 className=\"d-flex justify-content-between w-100 \">\r\n                  <span>{`Food Guide - ${i + 1}`}</span>\r\n                  {i === 1 && (\r\n                    <button\r\n                      className=\"btn btn-link p-0\"\r\n                      type=\"button\"\r\n                      onClick={() => remove(1)}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  )}\r\n                </h3>\r\n                <Input name={`foodGuide[${i}].food`} label=\"Food\" />\r\n                <Input\r\n                  name={`foodGuide[${i}].amount`}\r\n                  label=\"Amount (Gram)\"\r\n                  type=\"number\"\r\n                />\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <Select\r\n                    options={[\r\n                      { value: 0, label: \"Minutes\" },\r\n                      { value: 1, label: \"Hours\" },\r\n                    ]}\r\n                    label=\"Hours / Minutes\"\r\n                    name={`foodGuide[${i}].timeType`}\r\n                  />\r\n                  <Input\r\n                    type=\"number\"\r\n                    name={`foodGuide[${i}].timeBeforeTest`}\r\n                    label=\"Time Before Test\"\r\n                  />\r\n                </div>\r\n                <TextArea\r\n                  label=\"Description\"\r\n                  name={`foodGuide[${i}].description`}\r\n                  rules={{\r\n                    message: \"Description is required\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {fields.length < 2 && (\r\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  append({\r\n                    food: \"\",\r\n                    amountType: \"Luo\",\r\n                    amount: \"\",\r\n                    timeBeforeTest: 0,\r\n                    timeType: 0,\r\n                    description: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Add Food Guide +\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className={classNames({\r\n            \"btn btn-primary w-100\": true,\r\n          })}\r\n          type=\"submit\"\r\n        >\r\n          {isLoading ? \"Please Wait...\" : \"Create\"}\r\n          <span className=\"indicator-progress\">\r\n            {isLoading && (\r\n              <span className=\"spinner-border spinner-border-sm align-middle ms-2\" />\r\n            )}\r\n          </span>\r\n        </button>\r\n      </FormProvider>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TestForm;","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientForm.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Results\\Results.js",["335","336","337","338","339","340"],[],"import React, { useEffect, useState } from \"react\";import { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pic1 from './1.jpg';\r\nimport pic2 from './2.jpg';\r\nimport pic3 from './3.jpg';\r\nimport pic4 from './4.jpg';\r\nimport pic5 from './5.jpg';\r\nimport pic6 from './6.jpg';\r\nimport pic7 from './7.jpg';\r\nimport pic8 from './8.jpg';\r\n\r\n\r\nfunction Results() {\r\n  const { state } = useLocation();\r\n  const [sensorLogSec, setsensorLogSec] = useState([]);\r\n  useEffect(() => {\r\n    const firstRowSensorLog = state.sensorLog[0]\r\n    const lestRowSensorLog = state.sensorLog[state.sensorLog.length-1]\r\n    console.log(firstRowSensorLog);   \r\n    console.log(lestRowSensorLog);   \r\n    const firtTime = firstRowSensorLog.split(\" \")[1];\r\n    const lestTime = lestRowSensorLog.split(\" \")[1];\r\n    const firtTimeSec = parseInt(firtTime.split(\":\")[2]);\r\n    const lestTimeSec = parseInt(lestTime.split(\":\")[2]);\r\n    const firtTimeMin = parseInt(firtTime.split(\":\")[1]);\r\n    const lestTimeMin = parseInt(lestTime.split(\":\")[1]);\r\n    const totalFirstSec = firtTimeMin * 60 +firtTimeSec\r\n    const totalLasttSec = lestTimeMin * 60 +lestTimeSec\r\n    const totalGameTimeSec = totalLasttSec -totalFirstSec\r\n    let map1 = new Map();\r\n    let map1TimePlatform = new Map();\r\n    let map1TimeResultJump = new Map();\r\n    let platformSequnce = []\r\n    \r\n    for(let i = 0; i < state.gameLog.length; i++){\r\n        console.log(state.gameLog[i])\r\n      if (state.gameLog[i].includes(\"Platform\")){\r\n          if (!platformSequnce.includes(state.gameLog[i].split(\" \")[3]))  \r\n                platformSequnce.push(state.gameLog[i].split(\" \")[3])\r\n        let time = state.gameLog[i].split(\" \")[1];  \r\n        if (!map1TimePlatform.has(time)){\r\n          map1TimePlatform.set(time,state.gameLog[i].split(\" \")[3])\r\n      }\r\n      \r\n    }\r\n    if (state.gameLog[i].includes(\"SUCCESS\") || state.gameLog[i].includes(\"FAIL\") ){\r\n      let time = state.gameLog[i].split(\" \")[1];  \r\n      if (!map1TimeResultJump.has(time)){\r\n        map1TimeResultJump.set(time,state.gameLog[i].split(\" \")[6])\r\n      }\r\n    }\r\n    }\r\n    \r\n   \r\n    for(let i = 0; i <= totalGameTimeSec; i++){\r\n      map1.set(i,\"\")\r\n    }\r\n    for(let i = 0; i < state.sensorLog.length; i++){\r\n      let sensorLogSplit = state.sensorLog[i].split(\" \");\r\n      let time = sensorLogSplit[1];\r\n      let timeSplite = time.split(\":\");\r\n      let sec = parseInt(timeSplite[2])\r\n      let min = parseInt(timeSplite[1])\r\n      const totaltime = min * 60 + sec\r\n      const finalTime = totaltime - totalFirstSec\r\n      \r\n      if (map1TimePlatform.has(time) && map1TimeResultJump.has(time))\r\n        map1.set(finalTime, {\"time\":time,\"attention\":sensorLogSplit[5],\"platform\":map1TimePlatform.get(time),\"resultJump\":map1TimeResultJump.get(time)}) \r\n      if (!map1TimePlatform.has(time) && map1TimeResultJump.has(time))\r\n        map1.set(finalTime, {\"time\":time,\"attention\":sensorLogSplit[5],\"platform\":\"none\",\"resultJump\":map1TimeResultJump.get(time)}) \r\n      if (map1TimePlatform.has(time) && !map1TimeResultJump.has(time))\r\n        map1.set(finalTime, {\"time\":time,\"attention\":sensorLogSplit[5],\"platform\":map1TimePlatform.get(time),\"resultJump\":\"none\"}) \r\n      if (!map1TimePlatform.has(time) && !map1TimeResultJump.has(time))\r\n        map1.set(finalTime, {\"time\":time,\"attention\":sensorLogSplit[5],\"platform\":\"none\",\"resultJump\":\"none\"}) \r\n    }\r\n   \r\n   // fix secsses\r\n   for (var [key, value] of map1.entries()) {\r\n    \r\n    if (value[\"resultJump\"] == \"SUCCESS\" && value[\"platform\"] != \"none\"){\r\n        const platform =  value[\"platform\"]\r\n        console.log(platform)\r\n        // console.log(platformSequnce)\r\n        const index = platformSequnce.indexOf(platform)\r\n        const theRealPlatyform = platformSequnce[index-1]\r\n        let theKey = 0\r\n        for (var [key1, value1] of map1.entries()){\r\n            if (value1[\"platform\"] == theRealPlatyform){\r\n                theKey = key1\r\n            }\r\n        }\r\n          let valueChnage = map1.get(theKey)\r\n          valueChnage[\"resultJump\"] = \"SUCCESS\"\r\n          map1.set(theKey,valueChnage)\r\n          let deleteRes = map1.get(key)\r\n          deleteRes[\"resultJump\"] = \"none\"\r\n     }\r\n   \r\n    }\r\n    console.log(map1);   \r\n \r\n    \r\n\r\n    \r\n  });\r\n\r\n  console.log(state, \"THIS_IS_THE_PROJECT\");\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>TEST GRAPHS</h1>\r\n      {/* <select onchange=\"func(this.value)\">\r\n        <option disabled selected>choose graph</option>\r\n        <option value=\"FallVsSuccess.html\">Falls VS successes in the game</option>\r\n        <option value=\"AttentionLevel.html\">Attention level * time</option>\r\n        <option value=\"distanceGap.html\">Response distance gap * time</option>\r\n        <option value=\"distanceGapLevel.html\">Response distance gap * Beam difficulty level</option>\r\n        <option value=\"randomJump.html\">The amount of random jumps out of the total jumps</option>\r\n        <option value=\"AttentionLevelDiffLevel.html\">Time * Attention level * Level of difficulty in the game </option>\r\n        <option value=\"AttentionLevelJumpRes.html\">Time * Attention level * Jump result </option>\r\n        <option value=\"AttentionLevelResTime.html\">Time * Attention level * Response time in the game </option>\r\n      </select> */}\r\n      <div>\r\n      <div>\r\n        <h3>Falls VS successes in the game</h3>\r\n        <img src={pic1} alt=\"Fall VS Successe\"/>\r\n      </div>\r\n      <div>\r\n        <h3>Attention level * time</h3>\r\n        <img src={pic2} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>Response distance gap * time</h3>\r\n        <img src={pic3} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>Response distance gap * Beam difficulty level</h3>\r\n        <img src={pic4} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>The amount of random jumps out of the total jumps</h3>\r\n        <img src={pic5} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>Time * Attention level * Level of difficulty in the game</h3>\r\n        <img src={pic6} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>Time * Attention level * Jump result</h3>\r\n        <img src={pic7} alt=\"Fall VS Successe\"/>\r\n      </div>      <div>\r\n        <h3>Time * Attention level * Response time in the game</h3>\r\n        <img src={pic8} alt=\"Fall VS Successe\"/>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\Header.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\DoctorDashboard\\DoctorDashboard.js",["341"],[],"import React from \"react\";\r\nimport Notifications from \"../Dashboard-components/Notifications\";\r\nimport PatientTests from \"../../Patients/PatientTests\";\r\nimport PatientsListHP from \"../../Patients/PatientsListHP\";\r\n\r\nconst DoctorDashboard = () => {\r\n  return (\r\n    <div className=\"post d-flex flex-column-fluid\">\r\n      <div className=\"d-flex flex-column flex-row-fluid align-items-center\">\r\n        <div className=\"container\">\r\n          <div className=\"row g-6 g-xl-9 w-100\">\r\n            {/* <div className=\"col-12\">\r\n              <PatientTests getAll />\r\n            </div> */}\r\n            <div className=\"col-12\" style={{ float: \"left\", width:\"30%\"}}>\r\n              <PatientsListHP />\r\n            </div>\r\n            <div className=\"col-12\" style={{ float: \"left\", width:\"70%\"}}>\r\n              <Notifications />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\PatientDashboard\\PatientDashboard.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\modal\\Modal.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\PatientResetPassword\\PatientResetPasswordModal.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsAndTreatmentsHistory.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\LoginForm.js",["342","343","344"],[],"import Input from \"../../components/core/form/input/Input\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { login } from \"../../api/auth-api\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport LoginSubheader from \"../../components/auth/LoginSubheader\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport FormError from \"../../components/core/form/FormError\";\r\nimport useRequest from \"../../hooks/useRequest\";\r\nimport SubmitBtn from \"../../components/core/form/submit-btn/SubmitBtn\";\r\n\r\nconst ERRORS_MAP = {\r\n  default: \"Incorrect Details, Please try again\",\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const { setIsAuthenticated, setIsUserDoctor } = useAuth();\r\n  const navigate = useNavigate();\r\n  const onSubmit = async (loginForm) => {\r\n    const {\r\n      data: { user, token },\r\n    } = await login(loginForm);\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    localStorage.setItem(\"token\", token);\r\n    setIsAuthenticated(true);\r\n    setIsUserDoctor(user.type === \"doctor\");\r\n    navigate(\"/app/dashboard\");\r\n  };\r\n  const { onRequest: onLogin } = useRequest(onSubmit, ERRORS_MAP);\r\n\r\n  return (\r\n    <form onSubmit={onLogin}>\r\n      <div className=\"text-center mb-10\">\r\n        <h1 className=\"text-dark mb-3\">Login In to FFC</h1>\r\n        <LoginSubheader />\r\n      </div>\r\n      <FormError />\r\n      <Input\r\n        name=\"email\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        rules={{\r\n          required: \"Email is required\",\r\n        }}\r\n      />\r\n      <Input\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        rules={{\r\n          required: \"Password is required\",\r\n        }}\r\n      />\r\n      <div className=\"separator my-5\" />\r\n      <SubmitBtn submitText=\"Login\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\Legend.js",["345","346"],[],"import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getPatients } from \"../../../api/patients-api\";\r\n\r\nconst Legend = () => {\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"card bg-dark text-white h-100\"\r\n\r\n    >\r\n      <div className=\"card-header\">\r\n        <h3 className=\"text-white card-title justify-content-center w-100\">\r\n          Treatment statuses\r\n        </h3>\r\n        <ul>\r\n          <li><b>New -</b> The treatment file is opened, waiting for the first tests to be added by the therapist</li>\r\n          <li><b>In progress -</b> The tests defined in the treatment file are performed by the patient</li>\r\n          <li><b>Hold -</b> Treatment is hold by the thearpist for some reason </li>\r\n          <li><b>Completed -</b> The therapist decided to end the treatment process </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"card-header\">\r\n        <h3 className=\"text-white card-title justify-content-center w-100\">\r\n          Test statuses\r\n        </h3>\r\n        <ul>\r\n          <li><b>New -</b>The therapist entered a new test and the patient was required to confirm </li>\r\n          <li><b>Planned -</b>A future test approved by the patient</li>\r\n          <li><b>Problem -</b>The test was <b>NOT</b> performed correctly and there are <b>NO</b> results for some reason </li>\r\n          <li><b>Done -</b>The test was performed correctly and there are results </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientsList.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsAndTreatments.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientCard.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\auth-api.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\select\\Select.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\input\\Input.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\patients-api.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\tests-api.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\text-area\\TextArea.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\date-picker\\DatePicker.js",["347"],[],"import React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\nconst DatePicker = ({ name, className = \"\" }) => {\r\n  const {\r\n    control,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <div className=\"datepicker\">\r\n      <Controller\r\n        control={control}\r\n        name={name}\r\n        rules={{ required: \"Date is Required\" }}\r\n        render={({\r\n          field: { onChange, ref, value = new Date().getTime() },\r\n        }) => {\r\n          return (\r\n            <div className=\"position-relative d-flex align-items-center w-100\">\r\n              <Flatpickr\r\n                options={{\r\n                  enableTime: true,\r\n                  dateFormat: \"Y-m-d H:i:s\",\r\n                }}\r\n                defaultValue=\"\"\r\n                onChange={(v) => onChange(v[0].getTime())}\r\n                render={({}, fpRef) => {\r\n                  return (\r\n                    <div\r\n                      className=\"position-relative d-flex align-items-center\"\r\n                      ref={fpRef}\r\n                    >\r\n                      <span className=\" position-absolute ms-4 mb-1 fas fa-calendar-alt\" />\r\n                      <input\r\n                        className={classNames({\r\n                          \"form-control\": true,\r\n                          \"is-invalid\": errors[name],\r\n                          [className]: true,\r\n                        })}\r\n                        ref={ref}\r\n                        value={format(\r\n                          value || new Date().getTime(),\r\n                          \"d-M-yyyy - aHH:mm\"\r\n                        )}\r\n                        readOnly={true}\r\n                        name={name}\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n      {errors[name] && (\r\n        <div className=\"text-danger\">\r\n          <span>{errors[name].message}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientsListHP.js",["348"],[],"import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getPatients } from \"../../../api/patients-api\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst PatientsListHP = ({ selectedPatient, setSelectedPatient }) => {\r\n  const { data, isLoading, isError } = useQuery(\"patients\", getPatients);\r\n  const navigate = useNavigate(); \r\n\r\n  return (\r\n    <div\r\n      className=\"card bg-dark text-white h-100\"\r\n      style={{ minHeight: \"450px\" }}\r\n    >\r\n      <div className=\"card-header\">\r\n        <h3 className=\"text-white card-title justify-content-center w-100\">\r\n        Patients in treatment\r\n        </h3>\r\n      </div>\r\n      {isError && <span>Error</span>}\r\n      {isLoading && <span>Loading</span>}\r\n      {!isLoading && !isError && (\r\n        <div style={{ textAlign:\"center\"}}>\r\n          {data.map((p) => (\r\n            <button\r\n              key={p._id}\r\n              className={`btn btn-outline-primary mx-5 my-3 ${\r\n                selectedPatient?._id === p._id && \"btn-dashed btn-success\"\r\n              }`}\r\n              type=\"button\"\r\n              onClick={() => \r\n                \r\n                //setSelectedPatient(p)\r\n                navigate(\"/app/treatments\" , {state: {p}})\r\n                \r\n              }\r\n              \r\n            >\r\n              <div>\r\n                <span >{p.fullName}</span>\r\n              </div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientsListHP;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\NavigationItems.js",["349","350"],[],"import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport useAuth from \"../../../../../hooks/useAuth\";\r\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\r\nimport Logo from \"../../../../../../src/LOGO.png\";\r\n\r\n\r\n\r\nconst CSS_itemsContainer =\r\n  \"menu menu-lg-rounded menu-column menu-lg-row menu-state-bg menu-title-gray-700 menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary menu-arrow-gray-400 fw-bold my-5 my-lg-0 align-items-stretch\";\r\n\r\nconst navItemsDoc = [\r\n  // {\r\n  //   displayName: \"FFC\",\r\n  //   linkTo: \"/app/dashboard\",\r\n  // },\r\n  {\r\n    displayName: \"My Patients\",\r\n    linkTo: \"/app/patients\",\r\n  },\r\n  {\r\n    displayName: \"Current Treatments\",\r\n    linkTo: \"/app/treatmentsspecs\",\r\n  },\r\n  {\r\n    displayName: \"History\",\r\n    linkTo: \"/app/history\",\r\n  },\r\n];\r\nconst navItemsPatient = [\r\n  // {\r\n  //   displayName: \"FFC\",\r\n  //   linkTo: \"/app/dashboard\",\r\n  // },\r\n];\r\n\r\nconst NavigationItems = () => {\r\n  const { isUserDoctor } = useAuth();\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const navigationItems = isUserDoctor ? navItemsDoc : navItemsPatient;\r\n  return (\r\n    <div className=\"d-flex align-items-stretch\">\r\n      <div className=\"header-menu align-items-stretch\">\r\n        <div className={CSS_itemsContainer}>\r\n        <Link to=\"/app/dashboard\">\r\n          <img\r\n            src={Logo}\r\n            alt=\"example\"\r\n          />\r\n        </Link>\r\n          {navigationItems.map((n) => (\r\n            <div\r\n              key={n.displayName}\r\n              className={classNames({\r\n                [\"menu-item menu-lg-down-accordion me-lg-1\"]: true,\r\n                here: pathname === n.linkTo,\r\n              })}\r\n            >\r\n              <button\r\n                className=\"btn menu-link py-3\"\r\n                type=\"button\"\r\n                onClick={() => navigate(n.linkTo)}\r\n              >\r\n                <span className=\"menu-title \">{n.displayName}</span>\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\Notifications.js",["351","352"],[],"import React, { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getNotifications } from \"../../../../../api/notifications\";\r\n\r\nexport const socket = io(\"https://github.com/sharon-cohen/ffc_finalpro.git\");\r\n\r\nconst testEV = [\"create\", \"update\", \"delete\", \"confirm\"];\r\n\r\nconst Notifications = () => {\r\n  const { refetch } = useQuery(\"notifications\", getNotifications, {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { id } = JSON.parse(localStorage.getItem(\"user\"));\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"data\", id);\r\n      testEV.forEach((ev) => {\r\n        socket.on(`test:${ev}`, async () => {\r\n          await refetch();\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n};\r\n\r\nexport default Notifications;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTests.js",["353","354"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  getPatientTests,\r\n  deleteTest,\r\n  updateTestStatus,\r\n  getAllDoctorTests,\r\n} from \"../../../api/tests-api\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport useGlobalModal from \"../../../hooks/useGlobaModal\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { socket } from \"../AppLayout/Header/components/Notifications\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toggleTreatmentStatus } from \"../../../api/treatment-api\";\r\nimport useModal from \"../../../hooks/useModal\";\r\nimport Modal from \"../../core/modal/Modal\";\r\nimport CompleteTreatmentForm from \"./CompleteTreatmentForm\";\r\nimport TableIndicator from \"../../core/indicators/TableIndicator\";\r\nimport { format } from \"date-fns\";\r\nimport GuideDisplay from \"./GuideDisplay\";\r\n\r\nconst DeleteTestSwal = withReactContent(Swal);\r\n\r\nconst PatientTests = ({ selectedPatient, getAll = false }) => {\r\n  const [selectedGuide, setSelectedGuide] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { isUserDoctor } = useAuth();\r\n  const { isOpen, onClose, onOpen } = useModal();\r\n  const { onEditTest, isTestModalOpen } = useGlobalModal();\r\n  const { _id = \"\" } = selectedPatient || {};\r\n  const { data, isLoading, isError, refetch } = useQuery(\r\n    getAll ? \"allTests\" : [\"patientTests\", _id],\r\n    () => (getAll ? getAllDoctorTests() : getPatientTests(_id)),\r\n    {\r\n      enabled: !!selectedPatient || getAll,\r\n    }\r\n  );\r\n\r\n  const { tests = [], treatment = {} } = data || {};\r\n\r\n  const onDeleteTest = async (testId, patientId) => {\r\n    const { isConfirmed } = await DeleteTestSwal.fire({\r\n      title: \"Confirm Deletion\",\r\n      html: `This action is  <strong>FINAL</strong>\r\n             and cannot be <span class=\"badge badge-danger\">UNDONE</span>`,\r\n      icon: \"warning\",\r\n      buttonsStyling: false,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-danger btn-active-light-danger\",\r\n        cancelButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-dark btn-active-light-dark\",\r\n      },\r\n    });\r\n    if (isConfirmed) {\r\n      await deleteTest(testId, patientId);\r\n      await refetch();\r\n    }\r\n  };\r\n  const onConfirmTest = async (testId) => {\r\n    const { createdBy } = JSON.parse(localStorage.getItem(\"user\"));\r\n    await updateTestStatus(testId);\r\n    socket.emit(\"test:confirm\", createdBy);\r\n    await refetch();\r\n  };\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [isTestModalOpen]);\r\n  return (\r\n    <div className=\"card  bg-dark h-100 text-white\">\r\n      <div className=\"card-body p-9\">\r\n        <div className=\"fs-1 fw-bold  mb-7 d-flex justify-content-between\">\r\n          <h3 className=\"text-white\">Tests</h3>\r\n          {selectedPatient && isUserDoctor && (\r\n            <div>\r\n              <button\r\n                onClick={onOpen}\r\n                type=\"button\"\r\n                className=\"btn btn-outline btn-outline-dashed btn-outline-success btn-active-light-success me-2 btn-sm\"\r\n              >\r\n                COMPLETE\r\n              </button>\r\n              <button \r\n                style={{ minWidth: \"84px\" }}\r\n                type=\"button\"\r\n                className={`\r\n              ${\r\n                treatment?.status === \"hold\"\r\n                  ? \"btn-outline-warning btn-active-light-warning btn-sm\"\r\n                  : \"btn-outline-danger btn-active-light-danger btn-sm\"\r\n              }\r\n                btn btn-outline btn-outline-dashed me-2 btn-sm\"\r\n              `}\r\n                onClick={() =>\r\n                  toggleTreatmentStatus(\r\n                    treatment._id,\r\n                    treatment?.status === \"hold\" ? \"in progress\" : \"hold\"\r\n                  )\r\n                }\r\n              >\r\n                {treatment?.status === \"hold\" ? \"Resume\" : \"Hold\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          <h3 className=\"text-white text-capitalize\">STATUS: {treatment?.status}</h3>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableIndicator isLoading={isLoading} />\r\n          <table className=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4\">\r\n            <thead>\r\n              <tr className=\"fw-bolder text-white\">\r\n                <th className=\"min-w-100px\">NAME</th>\r\n                <th className=\"min-w-100px\">DATE</th>\r\n                <th className=\"min-w-135px\">DESCRIPTION</th>\r\n                <th className=\"min-w-100px text-end\">STATUS</th>\r\n                <th className=\"min-w-65px text-end\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!isLoading &&\r\n                !isError &&\r\n                tests?.map((p) => (\r\n                  <tr key={p._id}>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"symbol symbol-45px me-5\" />\r\n                        <div className=\"d-flex justify-content-start flex-column\">\r\n                          <span className=\"text-white fw-bolder text-hover-primary fs-6\">\r\n                            {p.testName}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <a className=\"text-white fw-bolder text-hover-primary d-block fs-6\">\r\n                        {p.date &&\r\n                          format(parseInt(p.date), \"d-M-yyyy - aHH:mm\")}\r\n                      </a>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                      <div className=\"d-flex justify-content-start\">\r\n                        {p.foodGuide.map((e, i) => (\r\n                          <button\r\n                            onClick={() => setSelectedGuide(e)}\r\n                            type=\"button\"\r\n                            key={i}\r\n                            className=\"btn btn-outline btn-outline-dashed btn-outline-warning btn-active-light-warning me-2 btn-sm\"\r\n                          >{`Guide-${i + 1}`}</button>\r\n                        ))}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                      <span className=\"badge badge-success text-capitalize badge-lg\">\r\n                        {p.status}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                      {isUserDoctor && (\r\n                        <>\r\n                          {p.status === \"done\" && (\r\n                            <button\r\n                              className=\"btn btn-primary btn-sm\"\r\n                              onClick={() =>\r\n                                navigate(\"/app/results\", {\r\n                                  state: {\r\n                                    ...p,\r\n                                  },\r\n                                })\r\n                              }\r\n                              type=\"button\"\r\n                            >\r\n                              Results\r\n                            </button>\r\n                          )}\r\n                          <button\r\n                            className=\"btn btn-icon btn-danger btn-sm mx-1\"\r\n                            type=\"button\"\r\n                            onClick={() => onDeleteTest(p._id, p.patient)}\r\n                          >\r\n                            <i className=\"bi bi-trash-fill\" />\r\n                          </button>\r\n\r\n                          <button\r\n                            className=\"btn btn-icon btn-primary btn-sm\"\r\n                            type=\"button\"\r\n                            onClick={() => onEditTest(p)}\r\n                          >\r\n                            <i className=\"bi bi-pen-fill\" />\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                      {!isUserDoctor && (\r\n                        <>\r\n                          {p.confirmationStatus === \"response_required\" && (\r\n                            <button\r\n                              className=\"btn btn-primary btn-sm\"\r\n                              onClick={() => onConfirmTest(p._id)}\r\n                              type=\"button\"\r\n                            >\r\n                              Approve\r\n                            </button>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {isUserDoctor && (\r\n        <Modal isOpen={isOpen} title=\"Complete Treatment\" onClose={onClose}>\r\n          <CompleteTreatmentForm treatment={treatment?._id} onClose={onClose} />\r\n        </Modal>\r\n      )}\r\n      <GuideDisplay\r\n        guide={selectedGuide}\r\n        onClose={() => setSelectedGuide(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientTests;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\HeaderRightSide.js",["355"],[],"import React from \"react\";\r\nimport UserActions from \"./UserActions/UserActions\";\r\nimport useAuth from \"../../../../../hooks/useAuth\";\r\nimport Notifications from \"./Notifications\";\r\n\r\nconst HeaderRightSide = ({ setIsPatientOpen, setIsTestOpen }) => {\r\n  const { logout, isUserDoctor } = useAuth();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-stretch flex-shrink-0\">\r\n      <div className=\"d-flex align-items-center ms-1 ms-lg-3\">\r\n        <Notifications />\r\n        <>\r\n          {isUserDoctor && (\r\n            <>\r\n              <button\r\n                className=\"btn btn-primary btn-sm mx-5\"\r\n                onClick={() => setIsTestOpen(true)}\r\n              >\r\n                Create Test\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={() => setIsPatientOpen(true)}\r\n              >\r\n                Create Patient\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger fw-boldest mx-10\"\r\n          onClick={logout}\r\n        >\r\n          Logout\r\n        </button>\r\n        <span className=\"fw-boldest\">{`Hey, ${user.fullName}`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderRightSide;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\NextTestCard.js",["356"],[],"import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { deleteTest, getPatientTests } from \"../../../api/tests-api\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst StartTestSwal = withReactContent(Swal);\r\n\r\nconst NextTestCard = () => {\r\n  const { id } = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { data, isLoading, isError, refetch } = useQuery(\r\n    [\"patientTests\", id],\r\n    () => getPatientTests(id)\r\n  );\r\n  const { tests = [] } = data || {};\r\n  const latestTest = tests[0];\r\n  const { testName, code, foodGuide, date } = latestTest || {};\r\n  const onStartTest = async (testId, patientId) => {\r\n    const { isConfirmed } = await StartTestSwal.fire({\r\n      title: <span>{`Test Confirm`} </span>,\r\n      html: (\r\n        <p>\r\n          {`Your Test code is   `}\r\n          <span className=\"badge badge-success fs-4\"> {code}</span>\r\n        </p>\r\n      ),\r\n      icon: \"info\",\r\n      buttonsStyling: false,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-danger btn-active-light-danger\",\r\n        cancelButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-dark btn-active-light-dark\",\r\n      },\r\n    });\r\n    if (isConfirmed) {\r\n      await deleteTest(testId, patientId);\r\n      await refetch();\r\n    }\r\n  };\r\n  console.log(date);\r\n  return (\r\n    <div className=\"card bg-dark h-100 \">\r\n      <div className=\"card-body text-white\">\r\n        <span className=\"d-inline-block position-relative ms-2 fs-2\">\r\n          <span>{`Your Next Test Details`}</span>\r\n          <span className=\"d-inline-block position-absolute h-4px bottom-0 end-0 start-0 bg-success translate rounded\" />\r\n        </span>\r\n        {!isLoading && (\r\n          <>\r\n            <div className=\"row mb-7 mt-7\">\r\n              <label className=\"col-lg-6 fw-bold text-white\">Test Name:</label>\r\n              <div className=\"col-lg-6\">\r\n                <span className=\"fw-bolder fs-6 text-white\">{testName}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-7\">\r\n              <label className=\"col-lg-6 fw-bold text-white\">Test Date:</label>\r\n              <div className=\"col-lg-6\">\r\n                <span className=\"fw-bolder fs-6 text-white\">\r\n                  {format(new Date(parseInt(date)), \"d-M-yyyy - a zHH :mm\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-start\">\r\n              {foodGuide.map(\r\n                (\r\n                  { food, amount, description, timeBeforeTest, timeType },\r\n                  i\r\n                ) => (\r\n                  <div className=\"border-primary border mx-5 p-5 flex-grow-1\">\r\n                    <h3 className=\"text-white\">{`Guide - ${i}`}</h3>\r\n                    <div className=\"row mb-7\">\r\n                      <label className=\"col-lg-4 fw-bold\">Food:</label>\r\n                      <div className=\"col-lg-8\">\r\n                        <span className=\"fw-bolder fs-6\">{food}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mb-7\">\r\n                      <label className=\"col-lg-4 fw-bold \">Amount:</label>\r\n                      <div className=\"col-lg-8 fv-row\">\r\n                        <span className=\"fw-bold  fs-6\">{amount}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mb-7\">\r\n                      <label className=\"col-lg-4 fw-bold \">Description:</label>\r\n                      <div className=\"col-lg-8 fv-row\">\r\n                        <span className=\"fw-bold  fs-6\">{description}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row mb-7\">\r\n                      <label className=\"col-lg-4 fw-bold flex-grow-1 \">\r\n                        How long before test to eat\r\n                      </label>\r\n                      <div className=\"col-lg-8 fv-row\">\r\n                        <span className=\"fw-bold  fs-6\">\r\n                          {`${timeBeforeTest} - ${\r\n                            timeType === \"0\" ? \"Minutes\" : \"Hours\"\r\n                          }`}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary mt-5 float-end \"\r\n              onClick={onStartTest}\r\n            >\r\n              Start the test\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextTestCard;","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\PatientResetPassword\\PatientResetPasswordForm.js",["357","358","359","360","361","362","363","364"],[],"import Input from \"../../core/form/input/Input\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { login, newPatientPassword } from \"../../../api/auth-api\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport LoginSubheader from \"../LoginSubheader\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport FormError from \"../../core/form/FormError\";\r\nimport useRequest from \"../../../hooks/useRequest\";\r\nimport SubmitBtn from \"../../core/form/submit-btn/SubmitBtn\";\r\n\r\nconst ERRORS_MAP = {\r\n  default: \"Something went wrong, please try again\",\r\n};\r\n\r\nconst PatientResetPasswordForm = ({ setIsOpen }) => {\r\n  const onSubmit = async (newPasswordForm) => {\r\n    await newPatientPassword(newPasswordForm);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({ ...user, isPasswordSet: true })\r\n    );\r\n    setIsOpen(false);\r\n  };\r\n  const { onRequest: onNewPassword } = useRequest(onSubmit, {});\r\n\r\n  return (\r\n    <form onSubmit={onNewPassword}>\r\n      <div className=\"text-center mb-10\">\r\n        <h1 className=\"text-dark mb-3\">Choose a new password</h1>\r\n      </div>\r\n      <FormError />\r\n      <Input\r\n        name=\"password\"\r\n        label=\"New Password\"\r\n        type=\"password\"\r\n        rules={{\r\n          required: \"Password is required\",\r\n        }}\r\n      />\r\n      <div className=\"separator my-5\" />\r\n      <SubmitBtn submitText=\"Login\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PatientResetPasswordForm;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Dashboard\\Dashboard-components\\Notifications.js",["365","366"],[],"import React, { useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { useQuery } from \"react-query\";\r\nimport TableIndicator from \"../../../core/indicators/TableIndicator\";\r\nimport {\r\n  getNotifications,\r\n  updateNotificationsStatus,\r\n} from \"../../../../api/notifications\";\r\nimport useModal from \"../../../../hooks/useModal\";\r\nimport Modal from \"../../../core/modal/Modal\";\r\nimport CreateTicketForm from \"../../Tickets/CreateTicketForm\";\r\n\r\nconst Notifications = () => {\r\n  const { isOpen, onClose, onOpen } = useModal();\r\n  const { data, isLoading, isError } = useQuery(\r\n    \"notifications\",\r\n    getNotifications,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      onSuccess: (d) => updateNotificationsStatus(d.map((t) => t._id)),\r\n    }\r\n  );\r\n  return (\r\n    <div className=\"card bg-dark h-100 text-white\">\r\n      <div className=\"card-body p-9\">\r\n        <div className=\"fs-1 fw-bold  mb-7 text-start d-flex justify-content-between \">\r\n          <span className=\"d-inline-block position-relative ms-2\">\r\n            <span>Messages</span>\r\n            <span className=\"d-inline-block position-absolute h-4px bottom-0 end-0 start-0 bg-success translate rounded\" />\r\n          </span>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={onOpen}>\r\n            Create Message\r\n          </button>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <TableIndicator isLoading={isLoading} />\r\n          <table className=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4\">\r\n            <thead>\r\n              <tr className=\"fw-bolder text-white\">\r\n                <th className=\"min-w-200px\">Content</th>\r\n                <th className=\"min-w-150px\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!isLoading &&\r\n                !isError &&\r\n                data.map((p) => (\r\n                  <tr key={p._id}>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"symbol symbol-45px me-5\" />\r\n                        <div className=\"d-flex justify-content-start flex-column\">\r\n                          <span className=\"text-white fw-bolder text-hover-primary fs-6 d-flex align-items-center\">\r\n                            {p.status === \"new\" && (\r\n                              <i className=\"bi bi-envelope-plus text-warning me-3 fs-2\" />\r\n                            )}\r\n                            <div className=\"d-flex flex-column\">\r\n                              <span>{p.content}</span>\r\n                              <span\r\n                                className={`${\r\n                                  p.sender === \"system\"\r\n                                    ? \"text-success\"\r\n                                    : \"text-primary\"\r\n                                } fs-6 text-capitalize`}\r\n                              >\r\n                                By: {p.sender}\r\n                              </span>\r\n                            </div>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <a className=\"text-white fw-bolder text-hover-primary d-block fs-6\">\r\n                        {format(new Date(p.date), \"MM/dd/yyyy\")}\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={isOpen} onClose={onClose} title=\"Create Ticket\">\r\n        <CreateTicketForm onClose={onClose} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\auth\\LoginSubheader.js",["367"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginSubheader = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const successRegister = searchParams.get(\"successRegister\");\r\n  const [displaySuccess, setDisplaySuccess] = useState(successRegister);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setDisplaySuccess(false);\r\n    }, 7500);\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {displaySuccess && (\r\n        <h3 className=\"text-success\">\r\n          Register Successful, lets begin your journey\r\n        </h3>\r\n      )}\r\n      {!displaySuccess && (\r\n        <div className=\"text-gray-400 fw-bold fs-4\">\r\n          {`New Here? `}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate(\"/auth/register\")}\r\n            className=\"btn btn-link text-hover-success\"\r\n          >\r\n            Create an Account\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginSubheader;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\FormError.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useRequest.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\PatientTestsHistory.js",["368","369","370","371","372","373"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  getPatientTests,\r\n  deleteTest,\r\n  updateTestStatus,\r\n  getAllDoctorTests,\r\n} from \"../../../api/tests-api\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Swal from \"sweetalert2\";\r\nimport useGlobalModal from \"../../../hooks/useGlobaModal\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { socket } from \"../AppLayout/Header/components/Notifications\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toggleTreatmentStatus } from \"../../../api/treatment-api\";\r\nimport useModal from \"../../../hooks/useModal\";\r\nimport Modal from \"../../core/modal/Modal\";\r\nimport CompleteTreatmentForm from \"./CompleteTreatmentForm\";\r\nimport TableIndicator from \"../../core/indicators/TableIndicator\";\r\nimport { format } from \"date-fns\";\r\nimport GuideDisplay from \"./GuideDisplay\";\r\n\r\nconst DeleteTestSwal = withReactContent(Swal);\r\n\r\nconst PatientTests = ({ selectedPatient, getAll = false }) => {\r\n  const [selectedGuide, setSelectedGuide] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { isUserDoctor } = useAuth();\r\n  const { isOpen, onClose, onOpen } = useModal();\r\n  const { onEditTest, isTestModalOpen } = useGlobalModal();\r\n  const { _id = \"\" } = selectedPatient || {};\r\n  const { data, isLoading, isError, refetch } = useQuery(\r\n    getAll ? \"allTests\" : [\"patientTests\", _id],\r\n    () => (getAll ? getAllDoctorTests() : getPatientTests(_id)),\r\n    {\r\n      enabled: !!selectedPatient || getAll,\r\n    }\r\n  );\r\n\r\n  const { tests = [], treatment = {} } = data || {};\r\n\r\n  const onDeleteTest = async (testId, patientId) => {\r\n    const { isConfirmed } = await DeleteTestSwal.fire({\r\n      title: \"Confirm Deletion\",\r\n      html: `This action is  <strong>FINAL</strong>\r\n             and cannot be <span class=\"badge badge-danger\">UNDONE</span>`,\r\n      icon: \"warning\",\r\n      buttonsStyling: false,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-danger btn-active-light-danger\",\r\n        cancelButton:\r\n          \"btn btn-outline btn-outline-dashed btn-outline-dark btn-active-light-dark\",\r\n      },\r\n    });\r\n    if (isConfirmed) {\r\n      await deleteTest(testId, patientId);\r\n      await refetch();\r\n    }\r\n  };\r\n  const onConfirmTest = async (testId) => {\r\n    const { createdBy } = JSON.parse(localStorage.getItem(\"user\"));\r\n    await updateTestStatus(testId);\r\n    socket.emit(\"test:confirm\", createdBy);\r\n    await refetch();\r\n  };\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [isTestModalOpen]);\r\n  return (\r\n    <div className=\"card  bg-dark h-100 text-white\">\r\n      <div className=\"card-body p-9\">\r\n        <div className=\"fs-1 fw-bold  mb-7 d-flex justify-content-between\">\r\n          <h3 className=\"text-white\">Tests</h3>\r\n</div>            \r\n        <div className=\"table-responsive\">\r\n          <TableIndicator isLoading={isLoading} />\r\n          <table className=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4\">\r\n            <thead>\r\n              <tr className=\"fw-bolder text-white\">\r\n                <th className=\"min-w-100px\">NAME</th>\r\n                <th className=\"min-w-100px\">DATE</th>\r\n                <th className=\"min-w-135px\">DESCRIPTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!isLoading &&\r\n                !isError &&\r\n                tests?.map((p) => (\r\n                  <tr key={p._id}>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"symbol symbol-45px me-5\" />\r\n                        <div className=\"d-flex justify-content-start flex-column\">\r\n                          <span className=\"text-white fw-bolder text-hover-primary fs-6\">\r\n                            {p.testName}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <a className=\"text-white fw-bolder text-hover-primary d-block fs-6\">\r\n                        {p.date &&\r\n                          format(parseInt(p.date), \"d-M-yyyy - aHH:mm\")}\r\n                      </a>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                      <div className=\"d-flex justify-content-start\">\r\n                        {p.foodGuide.map((e, i) => (\r\n                          <button\r\n                            onClick={() => setSelectedGuide(e)}\r\n                            type=\"button\"\r\n                            key={i}\r\n                            className=\"btn btn-outline btn-outline-dashed btn-outline-warning btn-active-light-warning me-2 btn-sm\"\r\n                          >{`Guide-${i + 1}`}</button>\r\n                        ))}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"text-end\">\r\n                      {isUserDoctor && (\r\n                        <>\r\n                          {p.status === \"done\" && (\r\n                            <button\r\n                              className=\"btn btn-primary btn-sm\"\r\n                              onClick={() =>\r\n                                navigate(\"/app/results\", {\r\n                                  state: {\r\n                                    ...p,\r\n                                  },\r\n                                })\r\n                              }\r\n                              type=\"button\"\r\n                            >\r\n                              Results\r\n                            </button>\r\n                          )}\r\n\r\n                        </>\r\n                      )}\r\n                      {!isUserDoctor && (\r\n                        <>\r\n                          {p.confirmationStatus === \"response_required\" && (\r\n                            <button\r\n                              className=\"btn btn-primary btn-sm\"\r\n                              onClick={() => onConfirmTest(p._id)}\r\n                              type=\"button\"\r\n                            >\r\n                              Approve\r\n                            </button>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {isUserDoctor && (\r\n        <Modal isOpen={isOpen} title=\"Complete Treatment\" onClose={onClose}>\r\n          <CompleteTreatmentForm treatment={treatment?._id} onClose={onClose} />\r\n        </Modal>\r\n      )}\r\n      <GuideDisplay\r\n        guide={selectedGuide}\r\n        onClose={() => setSelectedGuide(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientTests;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\form\\submit-btn\\SubmitBtn.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\app-instance.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\notifications.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useGlobaModal.js",["374"],[],"import React, { useContext } from \"react\";\r\nimport { ModalContext } from \"../pages/app/AppRoutes\";\r\n\r\nconst useGlobalModal = () => {\r\n  const {\r\n    isTestModalOpen,\r\n    isPatientModalOpen,\r\n    setIsTestModalOpen,\r\n    setIsPatientModalOpen,\r\n    onEditTest,\r\n  } = useContext(ModalContext);\r\n  return {\r\n    isTestModalOpen,\r\n    isPatientModalOpen,\r\n    setIsTestModalOpen,\r\n    setIsPatientModalOpen,\r\n    onEditTest,\r\n  };\r\n};\r\n\r\nexport default useGlobalModal;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\hooks\\useModal.js",["375"],[],"import React, { useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onOpen = () => setIsOpen(true);\r\n  const onClose = () => setIsOpen(false);\r\n  const onToggle = () => setIsOpen((prevState) => !prevState);\r\n\r\n  return {\r\n    isOpen,\r\n    onOpen,\r\n    onClose,\r\n    onToggle,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\CompleteTreatmentForm.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Patients\\GuideDisplay.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\api\\treatment-api.js",["376"],[],"import { app } from \"./app-instance\";\r\n\r\nexport const toggleTreatmentStatus = async (treatment, status) => {\r\n  const response = await app.post(`api/treatment/toggle-status`, {\r\n    status,\r\n    treatment,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const completeTreatment = async (treatmentSummary, treatmentID) => {\r\n  const formData = new FormData();\r\n  const response = await app.post(\r\n    `api/treatment/complete`,\r\n    {\r\n      treatmentSummary,\r\n      treatmentID,\r\n    },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n","C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\core\\indicators\\TableIndicator.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\UserActions\\UserActions.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\Tickets\\CreateTicketForm.js",[],[],"C:\\Users\\maaya\\ffc_finalpro\\User_Interface\\frontend\\src\\components\\app\\AppLayout\\Header\\components\\UserActions\\UserActionsMenu.js",["377"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UserActionsMenu = () => {\r\n  const navigate = useNavigate();\r\n  const currentUser = {\r\n    first_name: \"Omer\",\r\n    last_name: \"Cohen\",\r\n    email: \"omercoav@gmail.com\",\r\n  };\r\n  return (\r\n    <div\r\n      className=\"menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-275px py-4\"\r\n      data-kt-menu=\"true\"\r\n    >\r\n      <div className=\"menu-item px-3\">\r\n        <div className=\"menu-content d-flex align-items-center px-3\">\r\n          <div className=\"symbol symbol-50px me-5\">\r\n            <img src=\"/media/avatars/150-5.jpg\" alt=\"user\" />\r\n          </div>\r\n          <div className=\"d-flex flex-column\">\r\n            <div className=\"fw-bolder d-flex align-items-center fs-5\">\r\n              {currentUser?.first_name} {currentUser?.last_name}\r\n              <span className=\"badge badge-light-danger fw-bolder fs-8 px-2 py-1 ms-2\">\r\n                BETA\r\n              </span>\r\n            </div>\r\n            <a href=\"#\" className=\"fw-bold text-muted text-hover-primary fs-7\">\r\n              {currentUser?.email}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"separator my-2\" />\r\n      <div className=\"menu-item px-5\">\r\n        <button\r\n          onClick={async () => {\r\n            localStorage.removeItem(\"token\");\r\n            await navigate(\"/auth/login\");\r\n          }}\r\n          className=\"menu-link px-5 btn w-100\"\r\n          type=\"button\"\r\n        >\r\n          Sign Out\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserActionsMenu;\r\n",{"ruleId":"378","severity":1,"message":"379","line":26,"column":6,"nodeType":"380","endLine":26,"endColumn":8,"suggestions":"381"},{"ruleId":"382","severity":1,"message":"383","line":4,"column":8,"nodeType":"384","messageId":"385","endLine":4,"endColumn":17},{"ruleId":"382","severity":1,"message":"386","line":7,"column":8,"nodeType":"384","messageId":"385","endLine":7,"endColumn":23},{"ruleId":"382","severity":1,"message":"387","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":26},{"ruleId":"382","severity":1,"message":"388","line":2,"column":8,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"389","line":3,"column":8,"nodeType":"384","messageId":"385","endLine":3,"endColumn":20},{"ruleId":"382","severity":1,"message":"390","line":4,"column":8,"nodeType":"384","messageId":"385","endLine":4,"endColumn":33},{"ruleId":"382","severity":1,"message":"391","line":8,"column":11,"nodeType":"384","messageId":"385","endLine":8,"endColumn":17},{"ruleId":"382","severity":1,"message":"392","line":8,"column":19,"nodeType":"384","messageId":"385","endLine":8,"endColumn":31},{"ruleId":"382","severity":1,"message":"393","line":9,"column":9,"nodeType":"384","messageId":"385","endLine":9,"endColumn":13},{"ruleId":"382","severity":1,"message":"387","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":26},{"ruleId":"382","severity":1,"message":"388","line":2,"column":8,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"394","line":9,"column":9,"nodeType":"384","messageId":"385","endLine":9,"endColumn":17},{"ruleId":"382","severity":1,"message":"388","line":2,"column":8,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"395","line":1,"column":8,"nodeType":"384","messageId":"385","endLine":1,"endColumn":13},{"ruleId":"382","severity":1,"message":"387","line":1,"column":27,"nodeType":"384","messageId":"385","endLine":1,"endColumn":36},{"ruleId":"382","severity":1,"message":"396","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":14},{"ruleId":"382","severity":1,"message":"397","line":15,"column":10,"nodeType":"384","messageId":"385","endLine":15,"endColumn":22},{"ruleId":"382","severity":1,"message":"398","line":15,"column":24,"nodeType":"384","messageId":"385","endLine":15,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":80,"column":29,"nodeType":"401","messageId":"402","endLine":80,"endColumn":31},{"ruleId":"399","severity":1,"message":"403","line":80,"column":63,"nodeType":"401","messageId":"402","endLine":80,"endColumn":65},{"ruleId":"399","severity":1,"message":"400","line":88,"column":36,"nodeType":"401","messageId":"402","endLine":88,"endColumn":38},{"ruleId":"382","severity":1,"message":"404","line":3,"column":8,"nodeType":"384","messageId":"385","endLine":3,"endColumn":20},{"ruleId":"382","severity":1,"message":"405","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":22},{"ruleId":"382","severity":1,"message":"406","line":2,"column":24,"nodeType":"384","messageId":"385","endLine":2,"endColumn":31},{"ruleId":"382","severity":1,"message":"407","line":6,"column":23,"nodeType":"384","messageId":"385","endLine":6,"endColumn":38},{"ruleId":"382","severity":1,"message":"408","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":18},{"ruleId":"382","severity":1,"message":"409","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":21},{"ruleId":"410","severity":1,"message":"411","line":30,"column":26,"nodeType":"412","messageId":"402","endLine":30,"endColumn":28},{"ruleId":"382","severity":1,"message":"407","line":4,"column":23,"nodeType":"384","messageId":"385","endLine":4,"endColumn":38},{"ruleId":"382","severity":1,"message":"413","line":5,"column":26,"nodeType":"384","messageId":"385","endLine":5,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":57,"column":17,"nodeType":"416","messageId":"417","endLine":57,"endColumn":67,"fix":"418"},{"ruleId":"382","severity":1,"message":"395","line":1,"column":8,"nodeType":"384","messageId":"385","endLine":1,"endColumn":13},{"ruleId":"378","severity":1,"message":"419","line":25,"column":6,"nodeType":"380","endLine":25,"endColumn":8,"suggestions":"420"},{"ruleId":"378","severity":1,"message":"419","line":71,"column":6,"nodeType":"380","endLine":71,"endColumn":23,"suggestions":"421"},{"ruleId":"422","severity":1,"message":"423","line":138,"column":23,"nodeType":"424","endLine":138,"endColumn":91},{"ruleId":"382","severity":1,"message":"425","line":2,"column":8,"nodeType":"384","messageId":"385","endLine":2,"endColumn":19},{"ruleId":"382","severity":1,"message":"426","line":12,"column":28,"nodeType":"384","messageId":"385","endLine":12,"endColumn":35},{"ruleId":"382","severity":1,"message":"405","line":2,"column":10,"nodeType":"384","messageId":"385","endLine":2,"endColumn":22},{"ruleId":"382","severity":1,"message":"406","line":2,"column":24,"nodeType":"384","messageId":"385","endLine":2,"endColumn":31},{"ruleId":"382","severity":1,"message":"427","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":15},{"ruleId":"382","severity":1,"message":"428","line":4,"column":8,"nodeType":"384","messageId":"385","endLine":4,"endColumn":15},{"ruleId":"382","severity":1,"message":"429","line":5,"column":8,"nodeType":"384","messageId":"385","endLine":5,"endColumn":22},{"ruleId":"382","severity":1,"message":"430","line":6,"column":10,"nodeType":"384","messageId":"385","endLine":6,"endColumn":21},{"ruleId":"382","severity":1,"message":"407","line":6,"column":23,"nodeType":"384","messageId":"385","endLine":6,"endColumn":38},{"ruleId":"382","severity":1,"message":"431","line":11,"column":7,"nodeType":"384","messageId":"385","endLine":11,"endColumn":17},{"ruleId":"382","severity":1,"message":"387","line":1,"column":17,"nodeType":"384","messageId":"385","endLine":1,"endColumn":26},{"ruleId":"422","severity":1,"message":"423","line":74,"column":23,"nodeType":"424","endLine":74,"endColumn":91},{"ruleId":"382","severity":1,"message":"432","line":6,"column":24,"nodeType":"384","messageId":"385","endLine":6,"endColumn":39},{"ruleId":"382","severity":1,"message":"433","line":15,"column":10,"nodeType":"384","messageId":"385","endLine":15,"endColumn":31},{"ruleId":"382","severity":1,"message":"434","line":29,"column":28,"nodeType":"384","messageId":"385","endLine":29,"endColumn":34},{"ruleId":"382","severity":1,"message":"435","line":30,"column":11,"nodeType":"384","messageId":"385","endLine":30,"endColumn":21},{"ruleId":"382","severity":1,"message":"436","line":42,"column":9,"nodeType":"384","messageId":"385","endLine":42,"endColumn":21},{"ruleId":"378","severity":1,"message":"419","line":71,"column":6,"nodeType":"380","endLine":71,"endColumn":23,"suggestions":"437"},{"ruleId":"422","severity":1,"message":"423","line":104,"column":23,"nodeType":"424","endLine":104,"endColumn":91},{"ruleId":"382","severity":1,"message":"395","line":1,"column":8,"nodeType":"384","messageId":"385","endLine":1,"endColumn":13},{"ruleId":"382","severity":1,"message":"395","line":1,"column":8,"nodeType":"384","messageId":"385","endLine":1,"endColumn":13},{"ruleId":"382","severity":1,"message":"438","line":12,"column":9,"nodeType":"384","messageId":"385","endLine":12,"endColumn":17},{"ruleId":"422","severity":1,"message":"439","line":28,"column":13,"nodeType":"424","endLine":28,"endColumn":80},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["440"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'treatmentsspecs' is defined but never used.","'useEffect' is defined but never used.","'PatientCard' is defined but never used.","'PatientsList' is defined but never used.","'PatientTestsAndTreatments' is defined but never used.","'logout' is assigned a value but never used.","'isUserDoctor' is assigned a value but never used.","'user' is assigned a value but never used.","'location' is assigned a value but never used.","'React' is defined but never used.","'Link' is defined but never used.","'sensorLogSec' is assigned a value but never used.","'setsensorLogSec' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'PatientTests' is defined but never used.","'FormProvider' is defined but never used.","'useForm' is defined but never used.","'useSearchParams' is defined but never used.","'useQuery' is defined but never used.","'getPatients' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'Router' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"menu-item menu-lg-down-accordion me-lg-1\"] found.","Property","unnecessarilyComputedProperty",{"range":"441","text":"442"},"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["443"],["444"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'UserActions' is defined but never used.","'isError' is assigned a value but never used.","'login' is defined but never used.","'useAuth' is defined but never used.","'LoginSubheader' is defined but never used.","'useNavigate' is defined but never used.","'ERRORS_MAP' is assigned a value but never used.","'setSearchParams' is assigned a value but never used.","'toggleTreatmentStatus' is defined but never used.","'onOpen' is assigned a value but never used.","'onEditTest' is assigned a value but never used.","'onDeleteTest' is assigned a value but never used.",["445"],"'formData' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"446","fix":"447"},[1671,1715],"\"menu-item menu-lg-down-accordion me-lg-1\"",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"450","fix":"452"},"Update the dependencies array to be: [navigate]",{"range":"453","text":"454"},"Update the dependencies array to be: [refetch]",{"range":"455","text":"456"},"Update the dependencies array to be: [isTestModalOpen, refetch]",{"range":"457","text":"458"},{"range":"459","text":"458"},[840,842],"[navigate]",[771,773],"[refetch]",[2650,2667],"[isTestModalOpen, refetch]",[2650,2667]]